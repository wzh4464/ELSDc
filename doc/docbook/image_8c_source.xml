<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_image_8c_source" xml:lang="en-US">
<title>image.c</title>
<indexterm><primary>src/image.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_image_8c_source_1l00001"/>00001 <emphasis role="comment">/*------------------------------------------------------------------------------</emphasis>
<anchor xml:id="_image_8c_source_1l00002"/>00002 <emphasis role="comment">&#32;&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00003"/>00003 <emphasis role="comment">&#32;&#32;Copyright&#32;(c)&#32;2007-2011&#32;rafael&#32;grompone&#32;von&#32;gioi&#32;(grompone@gmail.com)&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00004"/>00004 <emphasis role="comment">&#32;&#32;Copyright&#32;(c)&#32;2012-2014&#32;viorica&#32;patraucean&#32;(vpatrauc@gmail.com)</emphasis>
<anchor xml:id="_image_8c_source_1l00005"/>00005 <emphasis role="comment">&#32;&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00006"/>00006 <emphasis role="comment">&#32;&#32;This&#32;program&#32;is&#32;free&#32;software:&#32;you&#32;can&#32;redistribute&#32;it&#32;and/or&#32;modify</emphasis>
<anchor xml:id="_image_8c_source_1l00007"/>00007 <emphasis role="comment">&#32;&#32;it&#32;under&#32;the&#32;terms&#32;of&#32;the&#32;GNU&#32;Affero&#32;General&#32;Public&#32;License&#32;as</emphasis>
<anchor xml:id="_image_8c_source_1l00008"/>00008 <emphasis role="comment">&#32;&#32;published&#32;by&#32;the&#32;Free&#32;Software&#32;Foundation,&#32;either&#32;version&#32;3&#32;of&#32;the</emphasis>
<anchor xml:id="_image_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;&#32;License,&#32;or&#32;(at&#32;your&#32;option)&#32;any&#32;later&#32;version.</emphasis>
<anchor xml:id="_image_8c_source_1l00010"/>00010 <emphasis role="comment"></emphasis>
<anchor xml:id="_image_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;&#32;This&#32;program&#32;is&#32;distributed&#32;in&#32;the&#32;hope&#32;that&#32;it&#32;will&#32;be&#32;useful,</emphasis>
<anchor xml:id="_image_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;&#32;but&#32;WITHOUT&#32;ANY&#32;WARRANTY;&#32;without&#32;even&#32;the&#32;implied&#32;warranty&#32;of</emphasis>
<anchor xml:id="_image_8c_source_1l00013"/>00013 <emphasis role="comment">&#32;&#32;MERCHANTABILITY&#32;or&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE.&#32;See&#32;the</emphasis>
<anchor xml:id="_image_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;&#32;GNU&#32;Affero&#32;General&#32;Public&#32;License&#32;for&#32;more&#32;details.</emphasis>
<anchor xml:id="_image_8c_source_1l00015"/>00015 <emphasis role="comment"></emphasis>
<anchor xml:id="_image_8c_source_1l00016"/>00016 <emphasis role="comment">&#32;&#32;You&#32;should&#32;have&#32;received&#32;a&#32;copy&#32;of&#32;the&#32;GNU&#32;Affero&#32;General&#32;Public&#32;License</emphasis>
<anchor xml:id="_image_8c_source_1l00017"/>00017 <emphasis role="comment">&#32;&#32;along&#32;with&#32;this&#32;program.&#32;If&#32;not,&#32;see&#32;&lt;http://www.gnu.org/licenses/&gt;.</emphasis>
<anchor xml:id="_image_8c_source_1l00018"/>00018 <emphasis role="comment"></emphasis>
<anchor xml:id="_image_8c_source_1l00019"/>00019 <emphasis role="comment">&#32;&#32;image.c&#32;-&#32;This&#32;file&#32;belongs&#32;to&#32;ELSDc&#32;project&#32;(Ellipse&#32;and&#32;Line&#32;Segment&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00020"/>00020 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Detector&#32;with&#32;continuous&#32;validation).</emphasis>
<anchor xml:id="_image_8c_source_1l00021"/>00021 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;It&#32;contains&#32;functions&#32;to&#32;free&#32;/&#32;allocate&#32;/&#32;allocate&#32;and&#32;initialize&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00022"/>00022 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;images&#32;of&#32;type&#32;char&#32;/&#32;int&#32;/&#32;double&#32;.&#32;</emphasis>
<anchor xml:id="_image_8c_source_1l00023"/>00023 <emphasis role="comment"></emphasis>
<anchor xml:id="_image_8c_source_1l00024"/>00024 <emphasis role="comment">------------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00025"/>00025 
<anchor xml:id="_image_8c_source_1l00026"/>00026 
<anchor xml:id="_image_8c_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_image_8c_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_image_8c_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;ctype.h&gt;</emphasis>
<anchor xml:id="_image_8c_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="_image_8c_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_misc_8h">misc.h</link>&quot;</emphasis>
<anchor xml:id="_image_8c_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_image_8h">image.h</link>&quot;</emphasis>
<anchor xml:id="_image_8c_source_1l00033"/>00033 
<anchor xml:id="_image_8c_source_1l00034"/>00034 
<anchor xml:id="_image_8c_source_1l00035"/>00035 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00038"/><link linkend="_image_8c_1aa58f34a2b6c4700cbd956f820418bdee">00038</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_image_8c_1aa58f34a2b6c4700cbd956f820418bdee">free_PImageChar</link>(&#32;<link linkend="_structImageChar">PImageChar</link>&#32;i&#32;)
<anchor xml:id="_image_8c_source_1l00039"/>00039 {
<anchor xml:id="_image_8c_source_1l00040"/>00040 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00041"/>00041 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(i&#32;==&#32;NULL)&#32;||&#32;(i-&gt;<link linkend="_structImageChar_1ac24cea2bfcc927fd29bc74d1086707d8">data</link>&#32;==&#32;NULL)&#32;)
<anchor xml:id="_image_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;free_PImageChar:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00043"/>00043 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i-&gt;<link linkend="_structImageChar_1ac24cea2bfcc927fd29bc74d1086707d8">data</link>&#32;);
<anchor xml:id="_image_8c_source_1l00044"/>00044 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i&#32;);
<anchor xml:id="_image_8c_source_1l00045"/>00045 }
<anchor xml:id="_image_8c_source_1l00046"/>00046 
<anchor xml:id="_image_8c_source_1l00047"/>00047 
<anchor xml:id="_image_8c_source_1l00048"/>00048 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00051"/><link linkend="_image_8c_1a7e4805b775ae0ce63216d5e7fac3d99b">00051</link> <link linkend="_structImageChar">PImageChar</link>&#32;<link linkend="_image_8c_1a7e4805b775ae0ce63216d5e7fac3d99b">new_PImageChar</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize&#32;)
<anchor xml:id="_image_8c_source_1l00052"/>00052 {
<anchor xml:id="_image_8c_source_1l00053"/>00053 &#32;&#32;<link linkend="_structImageChar">PImageChar</link>&#32;image;
<anchor xml:id="_image_8c_source_1l00054"/>00054 
<anchor xml:id="_image_8c_source_1l00055"/>00055 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00056"/>00056 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(xsize&#32;==&#32;0)&#32;||&#32;(ysize&#32;==&#32;0)&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageChar:&#32;invalid&#32;image&#32;size.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00058"/>00058 
<anchor xml:id="_image_8c_source_1l00059"/>00059 &#32;&#32;<emphasis role="comment">/*&#32;get&#32;memory&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00060"/>00060 &#32;&#32;image&#32;=&#32;(<link linkend="_image_8h_1abf368707b04976a0552dab4473f28b27">PImageChar</link>)&#32;malloc(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_structImageChar">ImageChar</link>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00061"/>00061 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageChar:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00062"/>00062 &#32;&#32;image-&gt;<link linkend="_structImageChar_1ac24cea2bfcc927fd29bc74d1086707d8">data</link>&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)&#32;calloc(&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;(xsize*ysize),
<anchor xml:id="_image_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00064"/>00064 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image-&gt;<link linkend="_structImageChar_1ac24cea2bfcc927fd29bc74d1086707d8">data</link>&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageChar:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00065"/>00065 
<anchor xml:id="_image_8c_source_1l00066"/>00066 &#32;&#32;<emphasis role="comment">/*&#32;set&#32;image&#32;size&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00067"/>00067 &#32;&#32;image-&gt;<link linkend="_structImageChar_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;=&#32;xsize;
<anchor xml:id="_image_8c_source_1l00068"/>00068 &#32;&#32;image-&gt;<link linkend="_structImageChar_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;=&#32;ysize;
<anchor xml:id="_image_8c_source_1l00069"/>00069 
<anchor xml:id="_image_8c_source_1l00070"/>00070 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00071"/>00071 }
<anchor xml:id="_image_8c_source_1l00072"/>00072 
<anchor xml:id="_image_8c_source_1l00073"/>00073 
<anchor xml:id="_image_8c_source_1l00074"/>00074 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00078"/><link linkend="_image_8c_1a93f3134419a437219c46bc206a210bbb">00078</link> <link linkend="_structImageChar">PImageChar</link>&#32;<link linkend="_image_8c_1a93f3134419a437219c46bc206a210bbb">new_PImageChar_ini</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize,
<anchor xml:id="_image_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;fill_value&#32;)
<anchor xml:id="_image_8c_source_1l00080"/>00080 {
<anchor xml:id="_image_8c_source_1l00081"/>00081 &#32;&#32;<link linkend="_structImageChar">PImageChar</link>&#32;image;&#32;
<anchor xml:id="_image_8c_source_1l00082"/>00082 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;N;&#32;
<anchor xml:id="_image_8c_source_1l00083"/>00083 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_image_8c_source_1l00084"/>00084 
<anchor xml:id="_image_8c_source_1l00085"/>00085 &#32;&#32;<emphasis role="comment">/*&#32;create&#32;image&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00086"/>00086 &#32;&#32;image&#32;=&#32;<link linkend="_image_8c_1a7e4805b775ae0ce63216d5e7fac3d99b">new_PImageChar</link>(&#32;xsize,&#32;ysize&#32;);&#32;
<anchor xml:id="_image_8c_source_1l00087"/>00087 
<anchor xml:id="_image_8c_source_1l00088"/>00088 &#32;&#32;<emphasis role="comment">/*&#32;initialize&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00089"/>00089 &#32;&#32;N&#32;=&#32;xsize&#32;*&#32;ysize;
<anchor xml:id="_image_8c_source_1l00090"/>00090 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;N;&#32;i++&#32;)&#32;image-&gt;<link linkend="_structImageChar_1ac24cea2bfcc927fd29bc74d1086707d8">data</link>[i]&#32;=&#32;fill_value;
<anchor xml:id="_image_8c_source_1l00091"/>00091 
<anchor xml:id="_image_8c_source_1l00092"/>00092 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00093"/>00093 }
<anchor xml:id="_image_8c_source_1l00094"/>00094 
<anchor xml:id="_image_8c_source_1l00095"/>00095 
<anchor xml:id="_image_8c_source_1l00096"/>00096 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00099"/><link linkend="_image_8c_1a6ee6bd84de84b9c43d96a7daf535ccd3">00099</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_image_8c_1a6ee6bd84de84b9c43d96a7daf535ccd3">free_PImageInt</link>(&#32;<link linkend="_structImageInt">PImageInt</link>&#32;i&#32;)
<anchor xml:id="_image_8c_source_1l00100"/>00100 {
<anchor xml:id="_image_8c_source_1l00101"/>00101 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00102"/>00102 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(i&#32;==&#32;NULL)&#32;||&#32;(i-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>&#32;==&#32;NULL)&#32;)
<anchor xml:id="_image_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;free_PImageInt:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00104"/>00104 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>&#32;);
<anchor xml:id="_image_8c_source_1l00105"/>00105 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i&#32;);
<anchor xml:id="_image_8c_source_1l00106"/>00106 }
<anchor xml:id="_image_8c_source_1l00107"/>00107 
<anchor xml:id="_image_8c_source_1l00108"/>00108 
<anchor xml:id="_image_8c_source_1l00109"/>00109 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00112"/><link linkend="_image_8c_1a24e8904b30314d7539fdcc505a26cf07">00112</link> <link linkend="_structImageInt">PImageInt</link>&#32;<link linkend="_image_8c_1a24e8904b30314d7539fdcc505a26cf07">new_PImageInt</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize)
<anchor xml:id="_image_8c_source_1l00113"/>00113 {
<anchor xml:id="_image_8c_source_1l00114"/>00114 &#32;&#32;<link linkend="_structImageInt">PImageInt</link>&#32;image;
<anchor xml:id="_image_8c_source_1l00115"/>00115 
<anchor xml:id="_image_8c_source_1l00116"/>00116 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00117"/>00117 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(xsize&#32;==&#32;0)&#32;||&#32;(ysize&#32;==&#32;0)&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageInt:&#32;invalid&#32;image&#32;size.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00119"/>00119 
<anchor xml:id="_image_8c_source_1l00120"/>00120 &#32;&#32;<emphasis role="comment">/*&#32;get&#32;memory&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00121"/>00121 &#32;&#32;image&#32;=&#32;(<link linkend="_image_8h_1ad2f6828b30c727a557c8c201c2913f0f">PImageInt</link>)&#32;malloc(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_structImageInt">ImageInt</link>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00122"/>00122 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageInt:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00123"/>00123 &#32;&#32;image-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>&#32;=&#32;(<emphasis role="keywordtype">int</emphasis>&#32;*)&#32;calloc(&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;(xsize*ysize),&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keywordtype">int</emphasis>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00124"/>00124 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageInt:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00125"/>00125 
<anchor xml:id="_image_8c_source_1l00126"/>00126 &#32;&#32;<emphasis role="comment">/*&#32;set&#32;image&#32;size&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00127"/>00127 &#32;&#32;image-&gt;<link linkend="_structImageInt_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;=&#32;xsize;
<anchor xml:id="_image_8c_source_1l00128"/>00128 &#32;&#32;image-&gt;<link linkend="_structImageInt_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;=&#32;ysize;
<anchor xml:id="_image_8c_source_1l00129"/>00129 
<anchor xml:id="_image_8c_source_1l00130"/>00130 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00131"/>00131 }
<anchor xml:id="_image_8c_source_1l00132"/>00132 
<anchor xml:id="_image_8c_source_1l00133"/>00133 
<anchor xml:id="_image_8c_source_1l00134"/>00134 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00138"/><link linkend="_image_8c_1aa54fa4ed5a519b86fb3264668ff6655f">00138</link> <link linkend="_structImageInt">PImageInt</link>&#32;<link linkend="_image_8c_1aa54fa4ed5a519b86fb3264668ff6655f">new_PImageInt_ini</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize,
<anchor xml:id="_image_8c_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fill_value&#32;)
<anchor xml:id="_image_8c_source_1l00140"/>00140 {
<anchor xml:id="_image_8c_source_1l00141"/>00141 &#32;&#32;<link linkend="_structImageInt">PImageInt</link>&#32;image;
<anchor xml:id="_image_8c_source_1l00142"/>00142 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;N;
<anchor xml:id="_image_8c_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_image_8c_source_1l00144"/>00144 
<anchor xml:id="_image_8c_source_1l00145"/>00145 &#32;&#32;<emphasis role="comment">/*&#32;create&#32;image&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00146"/>00146 &#32;&#32;image&#32;=&#32;<link linkend="_image_8c_1a24e8904b30314d7539fdcc505a26cf07">new_PImageInt</link>(&#32;xsize,&#32;ysize&#32;);&#32;
<anchor xml:id="_image_8c_source_1l00147"/>00147 
<anchor xml:id="_image_8c_source_1l00148"/>00148 &#32;&#32;<emphasis role="comment">/*&#32;initialize&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00149"/>00149 &#32;&#32;N&#32;=&#32;xsize&#32;*&#32;ysize;
<anchor xml:id="_image_8c_source_1l00150"/>00150 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;N;&#32;i++&#32;)&#32;image-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>[i]&#32;=&#32;fill_value;
<anchor xml:id="_image_8c_source_1l00151"/>00151 
<anchor xml:id="_image_8c_source_1l00152"/>00152 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00153"/>00153 }
<anchor xml:id="_image_8c_source_1l00154"/>00154 
<anchor xml:id="_image_8c_source_1l00155"/>00155 
<anchor xml:id="_image_8c_source_1l00156"/>00156 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00159"/><link linkend="_image_8c_1a65f922be2f5afbbcdb04645cb8f8bbfb">00159</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_image_8c_1a65f922be2f5afbbcdb04645cb8f8bbfb">free_PImageDouble</link>(&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;i&#32;)
<anchor xml:id="_image_8c_source_1l00160"/>00160 {
<anchor xml:id="_image_8c_source_1l00161"/>00161 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00162"/>00162 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(i&#32;==&#32;NULL)&#32;||&#32;(i-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;==&#32;NULL)&#32;)
<anchor xml:id="_image_8c_source_1l00163"/>00163 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;free_PImageDouble:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00164"/>00164 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;);
<anchor xml:id="_image_8c_source_1l00165"/>00165 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;i&#32;);
<anchor xml:id="_image_8c_source_1l00166"/>00166 }
<anchor xml:id="_image_8c_source_1l00167"/>00167 
<anchor xml:id="_image_8c_source_1l00168"/>00168 
<anchor xml:id="_image_8c_source_1l00169"/>00169 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00172"/><link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">00172</link> <link linkend="_structImageDouble">PImageDouble</link>&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize&#32;)
<anchor xml:id="_image_8c_source_1l00173"/>00173 {
<anchor xml:id="_image_8c_source_1l00174"/>00174 &#32;&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;image;
<anchor xml:id="_image_8c_source_1l00175"/>00175 
<anchor xml:id="_image_8c_source_1l00176"/>00176 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00177"/>00177 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(xsize&#32;==&#32;0)&#32;||&#32;(ysize&#32;==&#32;0)&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageDouble:&#32;invalid&#32;image&#32;size.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00179"/>00179 
<anchor xml:id="_image_8c_source_1l00180"/>00180 &#32;&#32;<emphasis role="comment">/*&#32;get&#32;memory&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00181"/>00181 &#32;&#32;image&#32;=&#32;(<link linkend="_image_8h_1ae20deac149c624780e3492d96ed9b771">PImageDouble</link>)&#32;malloc(&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_structImageDouble">ImageDouble</link>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00182"/>00182 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageDouble:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00183"/>00183 &#32;&#32;image-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;=&#32;(<emphasis role="keywordtype">double</emphasis>&#32;*)&#32;calloc(&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;(xsize*ysize),&#32;<emphasis role="keyword">sizeof</emphasis>(&#32;<emphasis role="keywordtype">double</emphasis>&#32;)&#32;);
<anchor xml:id="_image_8c_source_1l00184"/>00184 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;image-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;new_PImageDouble:&#32;not&#32;enough&#32;memory.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00185"/>00185 
<anchor xml:id="_image_8c_source_1l00186"/>00186 &#32;&#32;<emphasis role="comment">/*&#32;set&#32;image&#32;size&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00187"/>00187 &#32;&#32;image-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;=&#32;xsize;
<anchor xml:id="_image_8c_source_1l00188"/>00188 &#32;&#32;image-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;=&#32;ysize;
<anchor xml:id="_image_8c_source_1l00189"/>00189 
<anchor xml:id="_image_8c_source_1l00190"/>00190 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00191"/>00191 }
<anchor xml:id="_image_8c_source_1l00192"/>00192 
<anchor xml:id="_image_8c_source_1l00193"/>00193 
<anchor xml:id="_image_8c_source_1l00194"/>00194 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00198"/><link linkend="_image_8c_1a366212b692e1b18885cb5b137c656a9d">00198</link> <link linkend="_structImageDouble">PImageDouble</link>&#32;<link linkend="_image_8c_1a366212b692e1b18885cb5b137c656a9d">new_PImageDouble_ini</link>(&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize,
<anchor xml:id="_image_8c_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;fill_value&#32;)
<anchor xml:id="_image_8c_source_1l00200"/>00200 {
<anchor xml:id="_image_8c_source_1l00201"/>00201 &#32;&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;image;
<anchor xml:id="_image_8c_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;N;
<anchor xml:id="_image_8c_source_1l00203"/>00203 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i;
<anchor xml:id="_image_8c_source_1l00204"/>00204 
<anchor xml:id="_image_8c_source_1l00205"/>00205 &#32;&#32;<emphasis role="comment">/*&#32;create&#32;image&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00206"/>00206 &#32;&#32;image&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;xsize,&#32;ysize&#32;);&#32;
<anchor xml:id="_image_8c_source_1l00207"/>00207 
<anchor xml:id="_image_8c_source_1l00208"/>00208 &#32;&#32;<emphasis role="comment">/*&#32;initialize&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00209"/>00209 &#32;&#32;N&#32;=&#32;xsize&#32;*&#32;ysize;
<anchor xml:id="_image_8c_source_1l00210"/>00210 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;N;&#32;i++&#32;)&#32;image-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[i]&#32;=&#32;fill_value;
<anchor xml:id="_image_8c_source_1l00211"/>00211 
<anchor xml:id="_image_8c_source_1l00212"/>00212 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;image;
<anchor xml:id="_image_8c_source_1l00213"/>00213 }
<anchor xml:id="_image_8c_source_1l00214"/>00214 
<anchor xml:id="_image_8c_source_1l00215"/>00215 
<anchor xml:id="_image_8c_source_1l00216"/>00216 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00219"/><link linkend="_image_8c_1a51ef0a087c0699dffd084d8930fa7377">00219</link> <link linkend="_structImageDouble">PImageDouble</link>&#32;<link linkend="_image_8c_1a51ef0a087c0699dffd084d8930fa7377">img_gradient_angle</link>(&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;in,&#32;<emphasis role="keywordtype">double</emphasis>&#32;threshold&#32;)
<anchor xml:id="_image_8c_source_1l00220"/>00220 {
<anchor xml:id="_image_8c_source_1l00221"/>00221 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;ysize,&#32;adr,&#32;i,&#32;j;
<anchor xml:id="_image_8c_source_1l00222"/>00222 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;com1,&#32;com2,&#32;gx,&#32;gy,&#32;norm,&#32;norm2;
<anchor xml:id="_image_8c_source_1l00223"/>00223 &#32;&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;angles;
<anchor xml:id="_image_8c_source_1l00224"/>00224 
<anchor xml:id="_image_8c_source_1l00225"/>00225 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00226"/>00226 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;in&#32;==&#32;NULL&#32;||&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;==&#32;NULL&#32;||&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;&lt;=&#32;0&#32;||&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;&lt;=&#32;0&#32;)
<anchor xml:id="_image_8c_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_angle:&#32;invalid&#32;input&#32;image&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00228"/>00228 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;threshold&#32;&lt;&#32;0.0&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_angle:&#32;threshold&#32;must&#32;be&#32;positive&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00229"/>00229 &#32;&#32;
<anchor xml:id="_image_8c_source_1l00230"/>00230 &#32;&#32;xsize&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>;
<anchor xml:id="_image_8c_source_1l00231"/>00231 &#32;&#32;ysize&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>;
<anchor xml:id="_image_8c_source_1l00232"/>00232 
<anchor xml:id="_image_8c_source_1l00233"/>00233 &#32;&#32;<emphasis role="comment">/*&#32;allocate&#32;output&#32;image&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00234"/>00234 &#32;&#32;angles&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(xsize,ysize);
<anchor xml:id="_image_8c_source_1l00235"/>00235 &#32;
<anchor xml:id="_image_8c_source_1l00236"/>00236 &#32;&#32;<emphasis role="comment">/*&#32;&apos;undefined&apos;&#32;on&#32;the&#32;down&#32;and&#32;right&#32;boundaries&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00237"/>00237 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;ysize;&#32;i++)&#32;angles-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;i&#32;*&#32;xsize&#32;+&#32;xsize&#32;-&#32;1&#32;]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00238"/>00238 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;j=0;&#32;j&lt;xsize;&#32;j++)&#32;angles-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;(ysize-1)&#32;*&#32;xsize&#32;+&#32;j&#32;]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00239"/>00239 
<anchor xml:id="_image_8c_source_1l00240"/>00240 <emphasis role="comment">&#32;&#32;/***&#32;remaining&#32;part&#32;***/</emphasis>
<anchor xml:id="_image_8c_source_1l00241"/>00241 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;ysize-1;&#32;i++&#32;)
<anchor xml:id="_image_8c_source_1l00242"/>00242 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;j=0;&#32;j&lt;xsize-1;&#32;j++&#32;)
<anchor xml:id="_image_8c_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr&#32;=&#32;i*xsize+j;
<anchor xml:id="_image_8c_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_image_8c_source_1l00246"/>00246 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Norm&#32;2&#32;computation&#32;using&#32;2x2&#32;pixel&#32;window:</emphasis>
<anchor xml:id="_image_8c_source_1l00247"/>00247 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;B</emphasis>
<anchor xml:id="_image_8c_source_1l00248"/>00248 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;C&#32;D</emphasis>
<anchor xml:id="_image_8c_source_1l00249"/>00249 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and</emphasis>
<anchor xml:id="_image_8c_source_1l00250"/>00250 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;=&#32;D-A,&#32;&#32;com2&#32;=&#32;B-C.</emphasis>
<anchor xml:id="_image_8c_source_1l00251"/>00251 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Then</emphasis>
<anchor xml:id="_image_8c_source_1l00252"/>00252 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gx&#32;=&#32;B+D&#32;-&#32;(A+C)&#32;&#32;&#32;horizontal&#32;difference</emphasis>
<anchor xml:id="_image_8c_source_1l00253"/>00253 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gy&#32;=&#32;C+D&#32;-&#32;(A+B)&#32;&#32;&#32;vertical&#32;difference</emphasis>
<anchor xml:id="_image_8c_source_1l00254"/>00254 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;and&#32;com2&#32;are&#32;just&#32;to&#32;avoid&#32;2&#32;additions.</emphasis>
<anchor xml:id="_image_8c_source_1l00255"/>00255 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;xsize&#32;+&#32;1&#32;]&#32;-&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;];
<anchor xml:id="_image_8c_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com2&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;1&#32;]&#32;-&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;xsize&#32;];
<anchor xml:id="_image_8c_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gx&#32;=&#32;com1&#32;+&#32;com2;
<anchor xml:id="_image_8c_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gy&#32;=&#32;com1&#32;-&#32;com2;
<anchor xml:id="_image_8c_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;norm2&#32;=&#32;gx*gx+gy*gy;
<anchor xml:id="_image_8c_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;norm&#32;=&#32;sqrt(&#32;norm2&#32;/&#32;4.0&#32;);
<anchor xml:id="_image_8c_source_1l00262"/>00262 
<anchor xml:id="_image_8c_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;norm&#32;&lt;=&#32;threshold&#32;)&#32;<emphasis role="comment">/*&#32;norm&#32;too&#32;small,&#32;gradient&#32;not&#32;defined&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;angles-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;&#32;&#32;
<anchor xml:id="_image_8c_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;angles-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;]&#32;=&#32;atan2(&#32;gy,&#32;gx&#32;);&#32;&#32;
<anchor xml:id="_image_8c_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00268"/>00268 
<anchor xml:id="_image_8c_source_1l00269"/>00269 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;angles;
<anchor xml:id="_image_8c_source_1l00270"/>00270 }
<anchor xml:id="_image_8c_source_1l00271"/>00271 
<anchor xml:id="_image_8c_source_1l00272"/>00272 
<anchor xml:id="_image_8c_source_1l00273"/>00273 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00277"/><link linkend="_image_8c_1a0312c9c68ef16da181121d5f105caf33">00277</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_image_8c_1a0312c9c68ef16da181121d5f105caf33">img_gradient_sort</link>(&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;in,&#32;<emphasis role="keywordtype">double</emphasis>&#32;threshold,&#32;<link linkend="_structlist">CoordList</link>&#32;**list_p,&#32;
<anchor xml:id="_image_8c_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;**mem_p,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;n_bins,&#32;<emphasis role="keywordtype">double</emphasis>&#32;max_grad,&#32;
<anchor xml:id="_image_8c_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;*angles,&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;*gradmag,&#32;
<anchor xml:id="_image_8c_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;*gradx,&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;*grady&#32;)
<anchor xml:id="_image_8c_source_1l00281"/>00281 {
<anchor xml:id="_image_8c_source_1l00282"/>00282 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;ysize,&#32;adr,&#32;ind,&#32;i,&#32;j;
<anchor xml:id="_image_8c_source_1l00283"/>00283 &#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;com1,&#32;com2,&#32;gx,&#32;gy,&#32;norm,&#32;norm2;
<anchor xml:id="_image_8c_source_1l00284"/>00284 
<anchor xml:id="_image_8c_source_1l00285"/>00285 &#32;&#32;<emphasis role="comment">/*&#32;the&#32;rest&#32;of&#32;the&#32;variables&#32;are&#32;used&#32;for&#32;pseudo-ordering</emphasis>
<anchor xml:id="_image_8c_source_1l00286"/>00286 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;the&#32;gradient&#32;magnitude&#32;values&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00287"/>00287 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;list_count&#32;=&#32;0;
<anchor xml:id="_image_8c_source_1l00288"/>00288 &#32;&#32;<link linkend="_structlist">CoordList</link>&#32;*<link linkend="_structlist">list</link>;
<anchor xml:id="_image_8c_source_1l00289"/>00289 &#32;&#32;<link linkend="_structlist">CoordList</link>&#32;**range_l_s;&#32;<emphasis role="comment">/*&#32;array&#32;of&#32;pointers&#32;to&#32;start&#32;of&#32;bin&#32;list&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00290"/>00290 &#32;&#32;<link linkend="_structlist">CoordList</link>&#32;**range_l_e;&#32;<emphasis role="comment">/*&#32;array&#32;of&#32;pointers&#32;to&#32;end&#32;of&#32;bin&#32;list&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00291"/>00291 &#32;&#32;<link linkend="_structlist">CoordList</link>&#32;*start;
<anchor xml:id="_image_8c_source_1l00292"/>00292 &#32;&#32;<link linkend="_structlist">CoordList</link>&#32;*end;
<anchor xml:id="_image_8c_source_1l00293"/>00293 
<anchor xml:id="_image_8c_source_1l00294"/>00294 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00295"/>00295 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(in&#32;==&#32;NULL)&#32;&#32;&#32;&#32;&#32;||&#32;(in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;==&#32;NULL)&#32;||&#32;
<anchor xml:id="_image_8c_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;(in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>)&#32;&lt;=&#32;0&#32;||&#32;(in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;&lt;=&#32;0&#32;&#32;)&#32;)
<anchor xml:id="_image_8c_source_1l00297"/>00297 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00298"/>00298 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;threshold&#32;&lt;&#32;0.0&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;&apos;threshold&apos;&#32;must&#32;be&#32;positive.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;list_p&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;NULL&#32;pointer&#32;&apos;list_p&apos;.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00301"/>00301 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;mem_p&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;NULL&#32;pointer&#32;&apos;mem_p&apos;.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00302"/>00302 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;n_bins&#32;&lt;=&#32;0&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;&apos;n_bins&apos;&#32;must&#32;be&#32;positive.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00303"/>00303 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;max_grad&#32;&lt;=&#32;0.0&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00304"/>00304 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;img_gradient_sort:&#32;&apos;max_grad&apos;&#32;must&#32;be&#32;positive.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00305"/>00305 
<anchor xml:id="_image_8c_source_1l00306"/>00306 &#32;&#32;xsize&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>;
<anchor xml:id="_image_8c_source_1l00307"/>00307 &#32;&#32;ysize&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>;
<anchor xml:id="_image_8c_source_1l00308"/>00308 
<anchor xml:id="_image_8c_source_1l00309"/>00309 &#32;&#32;<emphasis role="comment">/*&#32;allocate&#32;output&#32;angles&#32;image&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00310"/>00310 &#32;&#32;*angles&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>,&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;);
<anchor xml:id="_image_8c_source_1l00311"/>00311 &#32;&#32;<emphasis role="comment">/*&#32;allocate&#32;image&#32;of&#32;gradient&#32;modulus&#32;and&#32;gradient&#32;vector&#32;components</emphasis>
<anchor xml:id="_image_8c_source_1l00312"/>00312 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;on&#32;Ox&#32;and&#32;Oy&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00313"/>00313 &#32;&#32;*gradmag&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>,&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;);
<anchor xml:id="_image_8c_source_1l00314"/>00314 &#32;&#32;*gradx&#32;&#32;&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>,&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;);
<anchor xml:id="_image_8c_source_1l00315"/>00315 &#32;&#32;*grady&#32;&#32;&#32;=&#32;<link linkend="_image_8c_1a5baadc47eb068cd9e3b2d52a5065e3c0">new_PImageDouble</link>(&#32;in-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>,&#32;in-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;);
<anchor xml:id="_image_8c_source_1l00316"/>00316 
<anchor xml:id="_image_8c_source_1l00317"/>00317 &#32;&#32;<emphasis role="comment">/*&#32;get&#32;memory&#32;for&#32;&quot;ordered&quot;&#32;coordinate&#32;list&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00318"/>00318 &#32;&#32;<link linkend="_structlist">list</link>&#32;=&#32;(<link linkend="_structlist">CoordList</link>&#32;*)&#32;calloc(&#32;(<emphasis role="keywordtype">size_t</emphasis>)&#32;(xsize*ysize),&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structlist">CoordList</link>)&#32;);
<anchor xml:id="_image_8c_source_1l00319"/>00319 &#32;&#32;*mem_p&#32;=&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;<link linkend="_structlist">list</link>;
<anchor xml:id="_image_8c_source_1l00320"/>00320 &#32;&#32;range_l_s&#32;=&#32;(<link linkend="_structlist">CoordList</link>&#32;**)&#32;calloc(&#32;n_bins,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structlist">CoordList</link>&#32;*)&#32;);
<anchor xml:id="_image_8c_source_1l00321"/>00321 &#32;&#32;range_l_e&#32;=&#32;(<link linkend="_structlist">CoordList</link>&#32;**)&#32;calloc(&#32;n_bins,&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structlist">CoordList</link>&#32;*)&#32;);
<anchor xml:id="_image_8c_source_1l00322"/>00322 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(<link linkend="_structlist">list</link>&#32;==&#32;NULL)&#32;||&#32;(range_l_s&#32;==&#32;NULL)&#32;||&#32;(range_l_e&#32;==&#32;NULL)&#32;)
<anchor xml:id="_image_8c_source_1l00323"/>00323 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;ll_angle:&#32;not&#32;enough&#32;memory&#32;for&#32;sorted&#32;list.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00324"/>00324 
<anchor xml:id="_image_8c_source_1l00325"/>00325 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;n_bins;&#32;i++&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00326"/>00326 &#32;&#32;&#32;&#32;range_l_s[i]&#32;=&#32;range_l_e[i]&#32;=&#32;NULL;
<anchor xml:id="_image_8c_source_1l00327"/>00327 
<anchor xml:id="_image_8c_source_1l00328"/>00328 &#32;&#32;<emphasis role="comment">/*&#32;&apos;undefined&apos;&#32;on&#32;the&#32;down&#32;and&#32;right&#32;boundaries&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00329"/>00329 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;ysize;&#32;i++&#32;)&#32;(*angles)-&gt;data[&#32;i&#32;*&#32;xsize&#32;+&#32;xsize&#32;-&#32;1&#32;]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00330"/>00330 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;j=0;&#32;j&lt;xsize;&#32;j++&#32;)&#32;(*angles)-&gt;data[&#32;(ysize-1)&#32;*&#32;xsize&#32;+&#32;j&#32;]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00331"/>00331 
<anchor xml:id="_image_8c_source_1l00332"/>00332 <emphasis role="comment">&#32;&#32;/***&#32;remaining&#32;part&#32;***/</emphasis>
<anchor xml:id="_image_8c_source_1l00333"/>00333 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=0;&#32;i&lt;ysize-1;&#32;i++&#32;)
<anchor xml:id="_image_8c_source_1l00334"/>00334 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;j=0;&#32;j&lt;xsize-1;&#32;j++&#32;)
<anchor xml:id="_image_8c_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;adr&#32;=&#32;i&#32;*&#32;xsize&#32;+&#32;j;
<anchor xml:id="_image_8c_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="_image_8c_source_1l00338"/>00338 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Norm&#32;2&#32;computation&#32;using&#32;2x2&#32;pixel&#32;window:</emphasis>
<anchor xml:id="_image_8c_source_1l00339"/>00339 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;A&#32;B</emphasis>
<anchor xml:id="_image_8c_source_1l00340"/>00340 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;C&#32;D</emphasis>
<anchor xml:id="_image_8c_source_1l00341"/>00341 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;and</emphasis>
<anchor xml:id="_image_8c_source_1l00342"/>00342 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;=&#32;D-A,&#32;&#32;com2&#32;=&#32;B-C.</emphasis>
<anchor xml:id="_image_8c_source_1l00343"/>00343 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Then</emphasis>
<anchor xml:id="_image_8c_source_1l00344"/>00344 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gx&#32;=&#32;B+D&#32;-&#32;(A+C)&#32;&#32;&#32;horizontal&#32;difference</emphasis>
<anchor xml:id="_image_8c_source_1l00345"/>00345 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gy&#32;=&#32;C+D&#32;-&#32;(A+B)&#32;&#32;&#32;vertical&#32;difference</emphasis>
<anchor xml:id="_image_8c_source_1l00346"/>00346 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;and&#32;com2&#32;are&#32;just&#32;to&#32;avoid&#32;2&#32;additions.</emphasis>
<anchor xml:id="_image_8c_source_1l00347"/>00347 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com1&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;xsize&#32;+&#32;1&#32;]&#32;-&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;];
<anchor xml:id="_image_8c_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;com2&#32;=&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;1&#32;]&#32;-&#32;in-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[&#32;adr&#32;+&#32;xsize&#32;];
<anchor xml:id="_image_8c_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gx&#32;=&#32;com1&#32;+&#32;com2;
<anchor xml:id="_image_8c_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gy&#32;=&#32;com1&#32;-&#32;com2;
<anchor xml:id="_image_8c_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;norm2&#32;=&#32;gx*gx&#32;+&#32;gy*gy;
<anchor xml:id="_image_8c_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;norm&#32;&#32;=&#32;sqrt(&#32;norm2&#32;/&#32;4.0&#32;);
<anchor xml:id="_image_8c_source_1l00354"/>00354 
<anchor xml:id="_image_8c_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*gradmag)-&gt;data[adr]&#32;=&#32;norm;
<anchor xml:id="_image_8c_source_1l00356"/>00356 &#32;&#32;&#32;&#32;(*gradx)-&gt;data&#32;&#32;[adr]&#32;=&#32;gx/2.0;
<anchor xml:id="_image_8c_source_1l00357"/>00357 &#32;&#32;&#32;&#32;(*grady)-&gt;data&#32;&#32;[adr]&#32;=&#32;gy/2.0;
<anchor xml:id="_image_8c_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;norm&#32;&lt;=&#32;threshold&#32;)&#32;<emphasis role="comment">/*&#32;norm&#32;too&#32;small,&#32;gradient&#32;not&#32;defined&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*angles)-&gt;data[adr]&#32;=&#32;<link linkend="_misc_8h_1a18d9edd8c3bfc9c1837a10505dfa037c">NOTDEF</link>;
<anchor xml:id="_image_8c_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_image_8c_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;angle&#32;computation&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*angles)-&gt;data[adr]&#32;=&#32;atan2(&#32;gy,&#32;gx&#32;);
<anchor xml:id="_image_8c_source_1l00366"/>00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;store&#32;the&#32;point&#32;in&#32;the&#32;right&#32;bin&#32;according&#32;to&#32;its&#32;norm&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ind&#32;=&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;(norm&#32;*&#32;(<emphasis role="keywordtype">double</emphasis>)&#32;n_bins&#32;/&#32;max_grad);
<anchor xml:id="_image_8c_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ind&#32;&gt;=&#32;n_bins&#32;)&#32;ind&#32;=&#32;n_bins&#32;-&#32;1;
<anchor xml:id="_image_8c_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;range_l_e[ind]&#32;==&#32;NULL)
<anchor xml:id="_image_8c_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_s[ind]&#32;=&#32;range_l_e[ind]&#32;=&#32;<link linkend="_structlist">list</link>&#32;+&#32;list_count++;
<anchor xml:id="_image_8c_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_image_8c_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_e[ind]-&gt;<link linkend="_structlist_1a7d9504c931be4ef8f9755e0065d27489">next</link>&#32;=&#32;<link linkend="_structlist">list</link>&#32;+&#32;list_count;
<anchor xml:id="_image_8c_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_e[ind]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_structlist">list</link>&#32;+&#32;list_count++;
<anchor xml:id="_image_8c_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_e[ind]-&gt;<link linkend="_structlist_1a6150e0515f7202e2fb518f7206ed97dc">x</link>&#32;&#32;&#32;&#32;=&#32;(int)&#32;j;
<anchor xml:id="_image_8c_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_e[ind]-&gt;<link linkend="_structlist_1a0a2f84ed7838f07779ae24c5a9086d33">y</link>&#32;&#32;&#32;&#32;=&#32;(int)&#32;i;
<anchor xml:id="_image_8c_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;range_l_e[ind]-&gt;<link linkend="_structlist_1a7d9504c931be4ef8f9755e0065d27489">next</link>&#32;=&#32;NULL;
<anchor xml:id="_image_8c_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00381"/>00381 
<anchor xml:id="_image_8c_source_1l00382"/>00382 &#32;&#32;<emphasis role="comment">/*&#32;Make&#32;the&#32;list&#32;of&#32;points&#32;&quot;ordered&quot;&#32;by&#32;norm&#32;value.</emphasis>
<anchor xml:id="_image_8c_source_1l00383"/>00383 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;It&#32;starts&#32;by&#32;the&#32;larger&#32;bin,&#32;so&#32;the&#32;list&#32;starts&#32;by&#32;the</emphasis>
<anchor xml:id="_image_8c_source_1l00384"/>00384 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;pixels&#32;with&#32;higher&#32;gradient&#32;value.&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00385"/>00385 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=n_bins-1;&#32;(i&gt;0)&#32;&amp;&amp;&#32;(range_l_s[i]==NULL);&#32;i--&#32;)&#32;{};
<anchor xml:id="_image_8c_source_1l00386"/>00386 &#32;&#32;start&#32;=&#32;range_l_s[i];
<anchor xml:id="_image_8c_source_1l00387"/>00387 &#32;&#32;end&#32;&#32;&#32;=&#32;range_l_e[i];
<anchor xml:id="_image_8c_source_1l00388"/>00388 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;start&#32;!=&#32;NULL&#32;)
<anchor xml:id="_image_8c_source_1l00389"/>00389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i--;&#32;i&gt;0&#32;;&#32;i--&#32;)
<anchor xml:id="_image_8c_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;range_l_s[i]&#32;!=&#32;NULL&#32;)
<anchor xml:id="_image_8c_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_image_8c_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;end-&gt;<link linkend="_structlist_1a7d9504c931be4ef8f9755e0065d27489">next</link>&#32;=&#32;range_l_s[i];
<anchor xml:id="_image_8c_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;end&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;range_l_e[i];
<anchor xml:id="_image_8c_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00395"/>00395 &#32;&#32;*list_p&#32;=&#32;start;
<anchor xml:id="_image_8c_source_1l00396"/>00396 
<anchor xml:id="_image_8c_source_1l00397"/>00397 &#32;&#32;<emphasis role="comment">/*&#32;free&#32;memory&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00398"/>00398 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;range_l_s&#32;);
<anchor xml:id="_image_8c_source_1l00399"/>00399 &#32;&#32;free(&#32;(<emphasis role="keywordtype">void</emphasis>&#32;*)&#32;range_l_e&#32;);
<anchor xml:id="_image_8c_source_1l00400"/>00400 }
<anchor xml:id="_image_8c_source_1l00401"/>00401 
<anchor xml:id="_image_8c_source_1l00402"/>00402 
<anchor xml:id="_image_8c_source_1l00403"/>00403 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00407"/><link linkend="_image_8c_1a23026d70139f0859bae4a5723784f1fc">00407</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_image_8c_1a23026d70139f0859bae4a5723784f1fc">mark_img_pts</link>(&#32;<link linkend="_structImageInt">PImageInt</link>&#32;im,&#32;<link linkend="_structPoint">Point</link>&#32;*pts,&#32;<emphasis role="keywordtype">int</emphasis>&#32;start,&#32;<emphasis role="keywordtype">int</emphasis>&#32;end,&#32;<emphasis role="keywordtype">int</emphasis>&#32;label&#32;)
<anchor xml:id="_image_8c_source_1l00408"/>00408 {
<anchor xml:id="_image_8c_source_1l00409"/>00409 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="_image_8c_source_1l00410"/>00410 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00411"/>00411 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(im&#32;==&#32;NULL)&#32;||&#32;(im-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>&#32;==&#32;NULL)&#32;||&#32;(im-&gt;<link linkend="_structImageInt_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;&lt;=&#32;0)&#32;||&#32;(im-&gt;<link linkend="_structImageInt_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&lt;=0)&#32;)
<anchor xml:id="_image_8c_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;mark_img_pts:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00413"/>00413 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;pts&#32;==&#32;NULL&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;mark_img_pts:&#32;invalid&#32;input&#32;point&#32;list.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00414"/>00414 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;start&#32;&gt;=&#32;end&#32;)&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;mark_img_pts:&#32;invalid&#32;index.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00415"/>00415 &#32;
<anchor xml:id="_image_8c_source_1l00416"/>00416 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;i=start;&#32;i&lt;end;&#32;i++&#32;)&#32;
<anchor xml:id="_image_8c_source_1l00417"/>00417 &#32;&#32;&#32;&#32;{&#32;
<anchor xml:id="_image_8c_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;im-&gt;<link linkend="_structImageInt_1ac103627c1ad15cbec2f22d0abe6d54b6">data</link>[&#32;pts[i].<link linkend="_structPoint_1a0a2f84ed7838f07779ae24c5a9086d33">y</link>&#32;*&#32;im-&gt;<link linkend="_structImageInt_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;+&#32;pts[i].<link linkend="_structPoint_1a6150e0515f7202e2fb518f7206ed97dc">x</link>&#32;]&#32;=&#32;label;&#32;
<anchor xml:id="_image_8c_source_1l00419"/>00419 &#32;&#32;&#32;&#32;}
<anchor xml:id="_image_8c_source_1l00420"/>00420 }
<anchor xml:id="_image_8c_source_1l00421"/>00421 
<anchor xml:id="_image_8c_source_1l00422"/>00422 
<anchor xml:id="_image_8c_source_1l00423"/>00423 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00426"/><link linkend="_image_8c_1a7d75c600cc492bd8efbc1cc0c3819d88">00426</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_image_8c_1a7d75c600cc492bd8efbc1cc0c3819d88">in_image</link>(&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;xsize,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;ysize)
<anchor xml:id="_image_8c_source_1l00427"/>00427 {
<anchor xml:id="_image_8c_source_1l00428"/>00428 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00429"/>00429 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(xsize&#32;&lt;=&#32;0)&#32;||&#32;(ysize&lt;=0)&#32;)
<anchor xml:id="_image_8c_source_1l00430"/>00430 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;in_image:&#32;invalid&#32;input&#32;image&#32;dimension.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00431"/>00431 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(x&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;(x&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)xsize)&#32;&amp;&amp;&#32;(y&#32;&gt;=&#32;0)&#32;&amp;&amp;&#32;(y&#32;&lt;&#32;(<emphasis role="keywordtype">int</emphasis>)ysize)&#32;)
<anchor xml:id="_image_8c_source_1l00432"/>00432 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_misc_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>;
<anchor xml:id="_image_8c_source_1l00433"/>00433 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_misc_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>;
<anchor xml:id="_image_8c_source_1l00434"/>00434 }
<anchor xml:id="_image_8c_source_1l00435"/>00435 
<anchor xml:id="_image_8c_source_1l00436"/>00436 
<anchor xml:id="_image_8c_source_1l00437"/>00437 <emphasis role="comment">/*----------------------------------------------------------------------------*/</emphasis>
<anchor xml:id="_image_8c_source_1l00441"/><link linkend="_image_8c_1a9d7c27ae8502d7bb6ef83ddd1e95df95">00441</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_image_8c_1a9d7c27ae8502d7bb6ef83ddd1e95df95">local_max</link>(&#32;<link linkend="_structImageDouble">PImageDouble</link>&#32;im,&#32;<emphasis role="keywordtype">int</emphasis>&#32;x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;y&#32;)
<anchor xml:id="_image_8c_source_1l00442"/>00442 {
<anchor xml:id="_image_8c_source_1l00443"/>00443 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xx,&#32;yy;
<anchor xml:id="_image_8c_source_1l00444"/>00444 &#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;adr&#32;=&#32;0;
<anchor xml:id="_image_8c_source_1l00445"/>00445 &#32;&#32;<emphasis role="comment">/*&#32;check&#32;parameters&#32;*/</emphasis>
<anchor xml:id="_image_8c_source_1l00446"/>00446 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(im&#32;==&#32;NULL)&#32;||&#32;(im-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>&#32;==&#32;NULL)&#32;||&#32;(im-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>&#32;&lt;=&#32;0)&#32;||&#32;(im-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&lt;=0)&#32;)
<anchor xml:id="_image_8c_source_1l00447"/>00447 &#32;&#32;&#32;&#32;<link linkend="_misc_8c_1aad9796c174f7ef5d226cd169f2520fd5">error</link>(<emphasis role="stringliteral">&quot;local_max:&#32;invalid&#32;input&#32;image.&quot;</emphasis>);
<anchor xml:id="_image_8c_source_1l00448"/>00448 &#32;&#32;adr&#32;=&#32;y*im-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>+x;
<anchor xml:id="_image_8c_source_1l00449"/>00449 &#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;xx=x-1;&#32;xx&lt;=x+1;&#32;xx++&#32;)
<anchor xml:id="_image_8c_source_1l00450"/>00450 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;yy=y-1;&#32;yy&lt;=y+1;&#32;yy++&#32;)
<anchor xml:id="_image_8c_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(xx!=x)&#32;&amp;&amp;&#32;(yy!=y)&#32;&amp;&amp;&#32;(<link linkend="_image_8c_1a7d75c600cc492bd8efbc1cc0c3819d88">in_image</link>(&#32;xx,&#32;yy,&#32;im-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>,&#32;im-&gt;<link linkend="_structImageDouble_1a7e7fdb6b4d76fd619024da6878c27d58">ysize</link>&#32;))&#32;)
<anchor xml:id="_image_8c_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;im-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[yy*im-&gt;<link linkend="_structImageDouble_1aa4b0263c533c5ce471067bd5ede24477">xsize</link>+xx]&#32;&gt;&#32;im-&gt;<link linkend="_structImageDouble_1a23436a7a2b44939627b59df11be7ad75">data</link>[adr]&#32;)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_misc_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</link>;
<anchor xml:id="_image_8c_source_1l00453"/>00453 
<anchor xml:id="_image_8c_source_1l00454"/>00454 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_misc_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</link>;
<anchor xml:id="_image_8c_source_1l00455"/>00455 }
</programlisting></section>
